{"version":3,"sources":["components/Form/Form.js","components/ToDo/ToDo.js","components/ToDoList/ToDoList.js","services/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","value","inputText","onChange","e","setInputText","target","type","onClick","inputObject","text","completed","id","Math","round","random","preventDefault","setToDos","toDos","pushFirebase","setStatus","name","ToDo","useState","todo","map","item","filter","element","deleteFromFirebase","ToDoList","filterToDos","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","App","status","setFilterToDos","useEffect","getFirebase","filterHandler","collection","get","then","snapshot","todos","forEach","doc","data","push","console","log","catch","error","object","add","deleteID","docs","delete","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e711a02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../Form/Form.css\"\r\n\r\nfunction Form(props) {\r\n// check onchange from input field\r\nconst inputTextHandler = (e) => {\r\n    \r\n    props.setInputText(e.target.value);\r\n}\r\nconst submitToDoHandler = (e) => {\r\n    const inputObject = {text: props.inputText, completed: false, id: Math.round(Math.random() *100)};\r\n    e.preventDefault();\r\n    props.setToDos([\r\n        ...props.toDos, inputObject\r\n    ]);\r\n    props.pushFirebase(inputObject);\r\n    props.setInputText(\"\");\r\n}\r\nconst statusHandler = (e) => {\r\n  props.setStatus(e.target.value)\r\n}\r\n  return (\r\n    <div>\r\n      <div className=\"content\">\r\n        <form>\r\n          <input value={props.inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n          <button onClick={submitToDoHandler} type=\"submit\">\r\n            <i className=\"fas fa-plus-square\" />\r\n          </button>\r\n        </form>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from 'react';\r\nimport \"../ToDo/ToDo.css\";\r\n\r\nfunction ToDo(props) {\r\n    const [editTextStatus, setEditTextStatus] = useState(\"hidden\");\r\n\r\n    const deleteHandler = () => {\r\n        props.setToDos(props.toDos.filter(\r\n            (element) => element.id !== props.todo.id\r\n        ))\r\n        props.deleteFromFirebase(props.todo.id)\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        props.setToDos(props.toDos.map(item => {\r\n            if(item.id === props.todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }; \r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${props.todo.completed ? \"completed\":\"\"}`}>{props.text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i  className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDo;","import React from \"react\";\r\nimport ToDo from \"../ToDo/ToDo\";\r\nimport \"../ToDoList/ToDoList.css\";\r\n\r\nfunction ToDoList(props) {\r\n    \r\n  return (\r\n    <div>\r\n      <div className=\"todo-container\">\r\n        <ul className=\"todo-list\" >\r\n        {props.filterToDos.map(todo => (\r\n            <ToDo key={todo.id} text={todo.text} toDos={props.toDos} setToDos={props.setToDos} todo={todo} pushFirebase = {props.pushFirebase} deleteFromFirebase = {props.deleteFromFirebase}/>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoList;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBTxMPpvXuG584oztSK851UzPlEJw67eRc\",\r\n  authDomain: \"todo-list-firebase-51b69.firebaseapp.com\",\r\n  projectId: \"todo-list-firebase-51b69\",\r\n  storageBucket: \"todo-list-firebase-51b69.appspot.com\",\r\n  messagingSenderId: \"884853746548\",\r\n  appId: \"1:884853746548:web:daf465ef095c5521ca1a21\",\r\n  measurementId: \"G-5CCQSB8EPS\",\r\n}\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nexport const auth = firebase.auth()\r\nexport const db = firebase.firestore();\r\n\r\nexport default firebase;","import \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport ToDoList from \"./components/ToDoList/ToDoList\";\nimport React, { useState, useEffect } from \"react\";\nimport {db, auth} from \"./services/firebase\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [toDos, setToDos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterToDos, setFilterToDos] = useState([]);\n  //firebase databases\n  const [toDosFromFb, setToDosFromFb] = useState([]);\n  const [toDosToFb, setToDosToFb] = useState([]);\n  \n  useEffect(() => {\n    // getLocal();\n    getFirebase();\n  }, [])\n  useEffect(() => {\n   filterHandler();\n  //  saveLocalToDos();\n  }, [toDos, status])\n\n  const filterHandler = () => {\n    switch(status){\n      case \"completed\":\n        setFilterToDos(toDos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilterToDos(toDos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilterToDos(toDos);\n        break;\n    }\n  }\n  //localStorage\n  const saveLocalToDos = () => {\n      localStorage.setItem('toDos', JSON.stringify(toDos));\n  }\n  const getLocal = () => {\n    if(localStorage.getItem('toDos') === null){\n      localStorage.setItem('toDos', JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"toDos\"))\n      setToDos(todoLocal);\n    }\n  }\n\n  const getFirebase = () => {\n    db.collection('todo-list-db') //find the collection todo-list-db\n      .get() //get all document from todo-list-db collection\n      .then( snapshot => {\n        const todos = [];\n        snapshot.forEach( doc => {\n          const data = doc.data()\n          const id = doc.id\n          todos.push(data)\n        })\n        setToDos(todos)\n        console.log(snapshot)\n      })//do whatever when the data sent from firebase\n      .catch(error => console.log(error)) \n  }\n\n  const pushFirebase = (object) => {\n    console.log(\"clicked\");\n    db.collection('todo-list-db')\n      .add(object)\n  }\n  const deleteFromFirebase = (deleteID) => {\n    console.log(deleteID)\n    db.collection('todo-list-db')\n      .get()\n      .then( snapshot => {\n        snapshot.docs.map( doc => {\n          const data = doc.data()\n          const id = doc.id\n          if(doc.data().id == deleteID){\n            db.collection('todo-list-db').doc(doc.id).delete().then(() => {\n              console.log(\"delete successfully\")\n            })\n          }\n        })\n      })\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"header\">Todo-list</div>\n      <Form\n        toDos={toDos}\n        setToDos={setToDos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus = {setStatus}\n        pushFirebase = {pushFirebase}\n      />\n      <ToDoList toDos={toDos} setToDos={setToDos} filterToDos={filterToDos} pushFirebase = {pushFirebase} deleteFromFirebase = {deleteFromFirebase}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}